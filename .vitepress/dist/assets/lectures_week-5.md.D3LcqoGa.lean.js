import{_ as i,c as t,a2 as a,o as e}from"./chunks/framework.DPuwY6B9.js";const E=JSON.parse('{"title":"Retrieving data from the web","description":"","frontmatter":{},"headers":[],"relativePath":"lectures/week-5.md","filePath":"lectures/week-5.md"}'),n={name:"lectures/week-5.md"};function l(h,s,k,p,r,d){return e(),t("div",null,s[0]||(s[0]=[a(`<h1 id="retrieving-data-from-the-web" tabindex="-1">Retrieving data from the web <a class="header-anchor" href="#retrieving-data-from-the-web" aria-label="Permalink to &quot;Retrieving data from the web&quot;">​</a></h1><h3 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h3><ul><li><a href="https://zapier.com/resources/guides/apis" target="_blank" rel="noreferrer">An introduction to APIs</a> chapter 1-3</li><li><a href="https://reqbin.com/code/python/ixa9gi7o/python-http-request-example" target="_blank" rel="noreferrer">API requests with Python</a></li><li><a href="https://httr2.r-lib.org/" target="_blank" rel="noreferrer">API requests with R</a></li><li><a href="https://r4ds.hadley.nz/webscraping" target="_blank" rel="noreferrer">Web Scraping with R</a></li><li><a href="https://realpython.com/python-web-scraping-practical-introduction/" target="_blank" rel="noreferrer">Web Scraping with Python</a></li></ul><p><em>You can find examples and motivation in the resources.</em></p><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>In this lecture, we will explore the core principles of REST as a communication framework for applications and learn practical methods for working with REST APIs, focusing on the standardized and efficient retrieval of resources through network communication. Additionally, we will study techniques for retrieving data from the internet, specifically web scraping. While we have examined how REST APIs function and how to retrieve resources through them, we will also address scenarios where data is not accessible via an API, necessitating the use of web scraping to retrieve data visible on websites.</p><h2 id="rest-apis" tabindex="-1">REST APIs <a class="header-anchor" href="#rest-apis" aria-label="Permalink to &quot;REST APIs&quot;">​</a></h2><p>REST (Representational State Transfer Application) APIs is a communications framework for applications, typically, web applications. In REST the application (requesting) resources is called the <em>client</em> and the application that responds is called the <em>server</em>. For instance, when you are at a restaurant, you are requesting food, which makes you the client. The restaurant serves you the food that you have requested. That is, the restaurant responds to you request. This makes the restaurant the server.</p><p>The REST framework specifies rules on how consitutents communicate in a network. There are several other frameworks for communication but REST is standard.</p><h3 id="the-framework" tabindex="-1">The Framework <a class="header-anchor" href="#the-framework" aria-label="Permalink to &quot;The Framework&quot;">​</a></h3><p>In REST, everything is a resource. Resources are identified by unique URIs (Uniform Resource Identifiers). The clients in the network communicate using HTTP methods. E.g <code>GET</code> to retrieve resources, <code>POST</code> to create new resources, <code>PUT</code> to update resources, <code>DELETE</code> to remove resources. There are several more HTTP methods but these are the most common ones. Resources have one or more representations, which can be in various formats such as <a href="#json">JSON</a> or <a href="#xml">XML</a>.</p><p>Each request from a client to a server must contain all the information need to understand and fulfill the request. The server doesn&#39;t store any infomation about the client inbetween requests. This makes REST stateless communications framework.</p><p>The idea is that everytime you make a request, you get a response containing some resource(s). For instance, imagine we are searching for something on google, we are in other words making a request to googles servers, and the server responds with the search results. The REST pattern is everywhere on the internet. The figure below illustrates this idea.</p><p><img src="https://www.altexsoft.com/static/blog-post/2023/11/72f74918-0345-4be1-bed3-08d1cfe138cc.webp" alt="rest-api"></p><p><em>Image from: <a href="https://www.altexsoft.com/blog/rest-api-design/" target="_blank" rel="noreferrer">https://www.altexsoft.com/blog/rest-api-design/</a></em></p><p>Before we continue on about REST APIs, we should consider why this is important to learn. For data scientist, most of the data will be provided from an organizations through the internet. It is highly unlikely, that you will be handed a usb containing data files. Therefore, retrieving data in a standardised format is essential. REST is the standard way of retrieving resources through a network.</p><p>Another motivation to why we should learn about REST APIs is because of the scope of the tool. REST is an efficent way to communicate in a network and the type of communication and network is arbitrary. In the motivation above, the resource was data but it can be anything. For instance, smart lights communicate using REST. We make a request from our mobile app to turn on/off a specific light. The app sends a request to the lamp server and the resource is then a physical action. This is how IKEA smart home works. This is just scratching the surface of the possibilities for REST APIs.</p><h3 id="request" tabindex="-1">Request <a class="header-anchor" href="#request" aria-label="Permalink to &quot;Request&quot;">​</a></h3><p>The request has the following structure that needs to be specified. The request consists of a</p><ul><li><strong>URI</strong>: Specifying the location of the resource you are requesting.</li><li><strong>Method</strong>: Specifying the type of request. E.g. <code>GET</code>, <code>POST</code>, <code>DELETE</code>, <code>PUT</code> and so on.</li><li><strong>Header</strong>: The headers provide additional information about the request or the client. The information needed is dependent on the API.</li><li><strong>Body</strong>: Optionally, data can be sent with the request, this is passed in the body of the request.</li></ul><h3 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-label="Permalink to &quot;Response&quot;">​</a></h3><p>The response consists of a</p><ul><li><strong>Status</strong>: Information of the status of the request. For instance status code</li><li><strong>Header</strong>: The header provide additional information about the response or the server. The information needed is dependent on the API.</li><li><strong>Body</strong>: The response consists of a body that contains the resource(s) requested (if request has been accepted).</li></ul><h3 id="resources-1" tabindex="-1">Resources <a class="header-anchor" href="#resources-1" aria-label="Permalink to &quot;Resources&quot;">​</a></h3><p>The resource is what we are after, but they can come in different types of representations.</p><h4 id="representation" tabindex="-1">Representation <a class="header-anchor" href="#representation" aria-label="Permalink to &quot;Representation&quot;">​</a></h4><p>The resource can be arbitrary but it can be of the form of some data in this case it is usually represented in a standard format. Here are some common formats.</p><h5 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h5><p>JavaScript Object Notation (JSON) is a lightweight data interchange format that is easy for humans to read and write, and easy for machines to parse and generate. JSON represents data as key-value pairs, similar to how objects are represented in python. Each key is a string, and values can be strings, numbers, objects, arrays, booleans, or null. See the following JSON representation of an individual.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John Doe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;isStudent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;city&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Exampleville&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;country&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JSONland&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;hobbies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;reading&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;coding&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;traveling&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Again, it is very easy to read and parse. This is a very typical representation of a resource.</p><h5 id="xml" tabindex="-1">XML <a class="header-anchor" href="#xml" aria-label="Permalink to &quot;XML&quot;">​</a></h5><p>eXtensible Markup Language (XML), is a markup language designed to store and transport data. It is a flexible format that is both human-readable and machine-readable. See the following XML representation of an individual.</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;John Doe&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;30&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">isStudent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;false&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">isStudent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">city</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Exampleville&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">city</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;XMLland&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">country</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobbies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;reading&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;coding&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;traveling&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobby</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hobbies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Again XML is easy to read and parse. Less common than JSON but still very common.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p>The internet communicates using the REST framework. In this case the request is a website and the response html. The browser then parses the html and shows you the website. Under the hood, you web browser (e.g Chrome) makes a <code>GET</code> request to some server on the network(internet) and the server responds with the code for the website.</p><p>Let&#39;s try to make our own request without using the browser. We can get the course schedule information from the Time Edit page.</p><p>The URI: <code>https://cloud.timeedit.net/su/web/stud1/ri167XQQ508Z50Qv57093gZ6y3Y7806Q5Y65Y1.json</code>. This is where the resource is located. Furthermore, we need to specify the method type. In this case we are making a <code>GET</code> request.</p><p>The request</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-bYWbk" id="tab-zw7tIaB" checked><label data-title="Python" for="tab-zw7tIaB">Python</label><input type="radio" name="group-bYWbk" id="tab-4qEFJvS"><label data-title="R" for="tab-4qEFJvS">R</label></div><div class="blocks"><div class="language-Python vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Making a get requests to URI</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://cloud.timeedit.net/su/web/stud1/ri167XQQ508Z50Qv57093gZ6y3Y7806Q5Y65Y1.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.json()</span></span></code></pre></div><div class="language-R vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">R</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Since R does not naturally have a similar structure to json, we need a few</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">more libaries to work with JSON.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(httr2)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jsonlite) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Parse JSON</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(listviewer) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># View Json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">URI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://cloud.timeedit.net/su/web/stud1/ri167XQQ508Z50Qv57093gZ6y3Y7806Q5Y65Y1.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(URI)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> req_perform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">json </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resp_body_string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">jsonedit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(json) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># View the JSON in  a nice way</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> fromJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(json)</span></span></code></pre></div></div></div><p>The response body contains the following data:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;columnheaders&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;Lokal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Karta&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Kurs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Kurstillfälle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Delkurs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Moment&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Aktivitet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Studentgrupp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Lärare&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Information&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Litteraturinfo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Tentamenssal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;URL&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  &#39;Viktigt</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> meddelande&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> &#39;info&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;reservationlimit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;reservationcount&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> &#39;reservations&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [{</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2612025</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">   &#39;startdate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2023-12-01</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">   &#39;starttime&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">   &#39;enddate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2023-12-01</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">   &#39;endtime&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">   &#39;columns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;Lärosal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">.</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> Albano</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> Hus</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">.</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> Vån</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    &#39;https:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//www.openstreetmap.org/?mlat=59.35523&amp;mlon=18.05639#map=18/59.35523/18.05639&#39;,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    &#39;MT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4007</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48182</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">.</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> H</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">%.</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> DAG.</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> NML&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    &#39;Föreläsning&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    &#39;Taariq</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> Fahran</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> Nazar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">...</span></span></code></pre></div><p>It is a simple as that! To get the data into a nice format we need to wrangle the raw data. This however we already know how to do.</p><h2 id="web-scraping" tabindex="-1">Web Scraping <a class="header-anchor" href="#web-scraping" aria-label="Permalink to &quot;Web Scraping&quot;">​</a></h2><p>Web scraping is the process of extracting data from websites. It involves accessing and collecting information present in the HTML code of a webpage. This technique provides a powerful means to gather data for analysis and research.</p><p>By scraping websites, we can retrieve information that is available on websites but that do not have APIs open to the public. Furthermore, we can stay updated with real-time information. This is particularly useful for tracking dynamic data that changes frequently. For instance, weather data, stock market data as so on.</p><h3 id="how-to-webscrape" tabindex="-1">How to Webscrape <a class="header-anchor" href="#how-to-webscrape" aria-label="Permalink to &quot;How to Webscrape&quot;">​</a></h3><p>To efficiently perform web scraping, an understanding of basic HTML is important.</p><h4 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h4><p>HTML, or HyperText Markup Language, serves as the backbone of the internet by providing a standardized structure for creating and presenting content on webpages. At its core, HTML is a markup language that uses tags to define the structure and elements within a document. Tags encapsulate different content elements, such as headings, paragraphs, links, images, and more. Understanding HTML is important for effective web scraping because it allows practitioners to navigate the structure of a webpage and precisely target the data they seek. By understanding the hierarchy of HTML elements and their attributes, web scrapers can programmatically access and extract relevant information.</p><p>Read more about HTML <a href="https://www.w3schools.com/html/" target="_blank" rel="noreferrer">here</a></p><h4 id="static-vs-dynamic" tabindex="-1">Static vs Dynamic <a class="header-anchor" href="#static-vs-dynamic" aria-label="Permalink to &quot;Static vs Dynamic&quot;">​</a></h4><p>Websites can be categorized as either static or dynamic. A static website consists of fixed content that remains unchanged until manually updated, making data extraction relatively straightforward using techniques like HTML parsing. On the other hand, dynamic websites use technologies like JavaScript to load content dynamically, altering the page after initial load. While static sites may be scraped using simple HTML parsing, dynamic sites often require tools like headless browsers (e.g., Selenium) to simulate user interactions and access dynamically rendered content.</p><p>In terms of REST, for static websites, we retrieve the complete website when making a request to the server. In contrast, dynamic websites retrieve the skeleton of the website and fills in the data using e.g JavaScript after the fact. Since, we are only retrieving the skeleton of the website when making a request, there is nothing to scrape, therefore the need for tool like headless browsers to fill in the data before scraping.</p><p>In general, it is a bit more difficult to scrape dynamically rendered websites, but not by much. The point is that we should be aware of the type of website being scraped and use the relevant tools for the job.</p><h3 id="ethical-considerations" tabindex="-1">Ethical Considerations <a class="header-anchor" href="#ethical-considerations" aria-label="Permalink to &quot;Ethical Considerations&quot;">​</a></h3><p>While web scraping opens doors to a wealth of information, it&#39;s crucial to approach it ethically. Here are some considerations:</p><ul><li><p>Always adhere to the terms of service of the website you are scraping. Some websites explicitly prohibit scraping in their terms.</p></li><li><p>To prevent server overload, implement rate limiting in your scraping scripts. This ensures you&#39;re not making too many requests in a short period, respecting the server&#39;s capacity.</p></li><li><p>Robots.txt files provide guidelines for web crawlers. Check for this file on a website to understand any restrictions or rules set by the website owner.</p></li></ul><h2 id="example-1" tabindex="-1">Example <a class="header-anchor" href="#example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p>To make web scraping more concrete, let&#39;s create a simple web scraper.</p><p>In the following website:</p><p><a href="https://www.worldometers.info/world-population/population-by-country/" target="_blank" rel="noreferrer">https://www.worldometers.info/world-population/population-by-country/</a></p><p>we can retrieve some some meta-data about countries around the world. The goal is to create a dataframe of the data in the website. We should begin by analysing the website. Right-click on the website and select <code>inspect</code>, this may differ between web-browsers. Now, we can interactively anaylse the content(HTML) of the website. For this particular website, we see that the data is in the form of a table. So let&#39;s look for a <code>&lt;table&gt;...&lt;/table&gt;</code> tag. We can see that the data is under the table with <code>id=&quot;example2&quot;</code>. From <code>&lt;thead&gt;...&lt;/thead&gt;</code>, we get the variable names in the <code>&lt;th&gt;...&lt;/th&gt;</code> tags and from <code>&lt;tbody&gt;...&lt;/tbody&gt;</code> we get the data in the <code>&lt;tr&gt;...&lt;/tr&gt;</code> tags.</p><p>Using this, let&#39;s write some code.</p><p>The following code scrapes the website and creates a dataframe of the data:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-oBly_" id="tab-Fae40kP" checked><label data-title="Python" for="tab-Fae40kP">Python</label><input type="radio" name="group-oBly_" id="tab-pwgFOiK"><label data-title="R" for="tab-pwgFOiK">R</label></div><div class="blocks"><div class="language-Python vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">Python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bs4 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BeautifulSoup </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://www.worldometers.info/world-population/population-by-country/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BeautifulSoup(r.content) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If this line causes an error, run &#39;pip install html5lib&#39; or install html5lib </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html.find(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thead </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table.find(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;thead&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tbody </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table.find(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tbody&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">columns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> th </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thead.find_all(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;th&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns.append(th.text)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tbody.find_all(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tr&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data.append(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [td.text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> td </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tr.find_all(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;td&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.DataFrame(data, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">columns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">columns)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or even more simply</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#df = pd.read_html(str(table))[0]</span></span></code></pre></div><div class="language-R vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">R</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tidyverse)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rvest)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">URL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://www.worldometers.info/world-population/population-by-country/&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> read_html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(URL)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#example2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thead </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;thead&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tbody </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tbody&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">columns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (th </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> thead </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;th&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(columns, th </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_text2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data.frame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (tr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tbody </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tr&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    td_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (td </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;td&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> td </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%&gt;%</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> html_text2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        td_ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(td_, val)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rbind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(df, td_)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">colnames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(df) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> columns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or even more simply</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#df &lt;- table %&gt;% html_table()</span></span></code></pre></div></div></div><p>The code produces the following dataframe.</p><table tabindex="0"><thead><tr><th style="text-align:right;"></th><th style="text-align:right;">#</th><th style="text-align:left;">Country (or dependency)</th><th style="text-align:left;">Population (2023)</th><th style="text-align:left;">Yearly Change</th><th style="text-align:left;">Net Change</th><th style="text-align:right;">Density (P/Km²)</th><th style="text-align:left;">Land Area (Km²)</th><th style="text-align:left;">Migrants (net)</th><th style="text-align:right;">Fert. Rate</th><th style="text-align:right;">Med. Age</th><th style="text-align:left;">Urban Pop %</th><th style="text-align:left;">World Share</th></tr></thead><tbody><tr><td style="text-align:right;">0</td><td style="text-align:right;">1</td><td style="text-align:left;">India</td><td style="text-align:left;">1,428,627,663</td><td style="text-align:left;">0.81 %</td><td style="text-align:left;">11,454,490</td><td style="text-align:right;">481</td><td style="text-align:left;">2,973,190</td><td style="text-align:left;">-486,136</td><td style="text-align:right;">2</td><td style="text-align:right;">28</td><td style="text-align:left;">36 %</td><td style="text-align:left;">17.76 %</td></tr><tr><td style="text-align:right;">1</td><td style="text-align:right;">2</td><td style="text-align:left;">China</td><td style="text-align:left;">1,425,671,352</td><td style="text-align:left;">-0.02 %</td><td style="text-align:left;">-215,985</td><td style="text-align:right;">152</td><td style="text-align:left;">9,388,211</td><td style="text-align:left;">-310,220</td><td style="text-align:right;">1.2</td><td style="text-align:right;">39</td><td style="text-align:left;">65 %</td><td style="text-align:left;">17.72 %</td></tr><tr><td style="text-align:right;">2</td><td style="text-align:right;">3</td><td style="text-align:left;">United States</td><td style="text-align:left;">339,996,563</td><td style="text-align:left;">0.50 %</td><td style="text-align:left;">1,706,706</td><td style="text-align:right;">37</td><td style="text-align:left;">9,147,420</td><td style="text-align:left;">999,700</td><td style="text-align:right;">1.7</td><td style="text-align:right;">38</td><td style="text-align:left;">83 %</td><td style="text-align:left;">4.23 %</td></tr><tr><td style="text-align:right;">3</td><td style="text-align:right;">4</td><td style="text-align:left;">Indonesia</td><td style="text-align:left;">277,534,122</td><td style="text-align:left;">0.74 %</td><td style="text-align:left;">2,032,783</td><td style="text-align:right;">153</td><td style="text-align:left;">1,811,570</td><td style="text-align:left;">-49,997</td><td style="text-align:right;">2.1</td><td style="text-align:right;">30</td><td style="text-align:left;">59 %</td><td style="text-align:left;">3.45 %</td></tr><tr><td style="text-align:right;">4</td><td style="text-align:right;">5</td><td style="text-align:left;">Pakistan</td><td style="text-align:left;">240,485,658</td><td style="text-align:left;">1.98 %</td><td style="text-align:left;">4,660,796</td><td style="text-align:right;">312</td><td style="text-align:left;">770,880</td><td style="text-align:left;">-165,988</td><td style="text-align:right;">3.3</td><td style="text-align:right;">21</td><td style="text-align:left;">35 %</td><td style="text-align:left;">2.99 %</td></tr></tbody></table><p>Some processing is needed but we already know how to do that.</p><p>Try scraping websites. The best way to learn is by practice!</p>`,71)]))}const g=i(n,[["render",l]]);export{E as __pageData,g as default};
