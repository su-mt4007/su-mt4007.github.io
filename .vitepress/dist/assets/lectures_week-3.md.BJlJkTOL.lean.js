import{_ as a,c as t,a2 as r,o}from"./chunks/framework.DPuwY6B9.js";const m=JSON.parse('{"title":"Week 3 Exploratory Data Analysis & Processing Data","description":"","frontmatter":{},"headers":[],"relativePath":"lectures/week-3.md","filePath":"lectures/week-3.md"}'),i={name:"lectures/week-3.md"};function s(n,e,h,l,d,u){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="week-3-exploratory-data-analysis-processing-data" tabindex="-1">Week 3 Exploratory Data Analysis &amp; Processing Data <a class="header-anchor" href="#week-3-exploratory-data-analysis-processing-data" aria-label="Permalink to &quot;Week 3 Exploratory Data Analysis &amp; Processing Data&quot;">​</a></h1><h3 id="resources" tabindex="-1">Resources <a class="header-anchor" href="#resources" aria-label="Permalink to &quot;Resources&quot;">​</a></h3><h4 id="eda" tabindex="-1">EDA <a class="header-anchor" href="#eda" aria-label="Permalink to &quot;EDA&quot;">​</a></h4><ul><li><a href="https://wesmckinney.com/book/" target="_blank" rel="noreferrer">P4DA</a>: chapter 13</li><li><a href="https://r4ds.had.co.nz/index.html" target="_blank" rel="noreferrer">R4DS</a>: chapter 7</li><li><a href="https://www.youtube.com/watch?v=xi0vhXFPegw&amp;t=951s" target="_blank" rel="noreferrer">Youtube Video ~40 min</a></li></ul><h4 id="processing-data" tabindex="-1">Processing Data <a class="header-anchor" href="#processing-data" aria-label="Permalink to &quot;Processing Data&quot;">​</a></h4><ul><li><a href="https://wesmckinney.com/book/" target="_blank" rel="noreferrer">P4DA</a>: chapter 7.1-7.2</li><li><a href="https://r4ds.hadley.nz/" target="_blank" rel="noreferrer">R4DS</a>: chapter 5, chapter 18</li><li><a href="https://www.analyticsvidhya.com/blog/2021/05/detecting-and-treating-outliers-treating-the-odd-one-out/" target="_blank" rel="noreferrer">Dealing with outliers (motivation)</a></li><li><a href="https://www.analyticsvidhya.com/blog/2021/10/handling-missing-value/" target="_blank" rel="noreferrer">Dealing with missing data</a></li></ul><p><em>You can find examples and motivation in the resources.</em></p><h3 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h3><p>On this page we will go through Exploratory Data Analysis (EDA) and procesessing data. To do this properly, one has to have a good understanding of the concepts thought in the previous weeks.</p><h2 id="exploratory-data-analysis" tabindex="-1">Exploratory Data Analysis <a class="header-anchor" href="#exploratory-data-analysis" aria-label="Permalink to &quot;Exploratory Data Analysis&quot;">​</a></h2><p>EDA is the process of systematically generating an understanding of the data using the tools we have studied. That is, transforming and visualising data. We have already, unknowingly, performed EDA, for instance, when we use the function <code>head</code>, it gives us a quick glance of the structure of the data. By using <code>head</code>, we have answered the question: <em>what is the structure of the data?</em></p><p>Asking questions is key to EDA. That is how we unwrap the complexity of the data, by asking and answering questions.</p><blockquote><p>There are no routine statistical questions, only questionable statistical routines.”</p><p>— Sir David Cox</p></blockquote><p><em>(quote borrowed from <a href="https://r4ds.had.co.nz/index.html" target="_blank" rel="noreferrer">R4DS</a></em></p><p>All questions of the data will lead to some deeper understanding of the data. What are questions that we can ask (and answer) to fill out the gaps of knowledge we have about the data? That ofcourse, depends on the data we are working with. Therefore, performing EDA is not a strict framework, rather a research methodology based on curiosity. E.g, <em>can one of the variables explain the other? Why or why not?</em>. Answering these type of questions will give us a deep insight into the data. We will not be able to answer all questions but knowing what type of questions those are, will give us insight into the limits of our dataset.</p><p>The process of EDA is iterative. Once a set of questions have been answered, new questions will arise. This continues until there are no more questions to ask or until you are satisfied with the understanding you have gained. You will get better and more efficient at posing questions with practice.</p><p>Look at the resources above for examples of EDA.</p><h2 id="processing-data-1" tabindex="-1">Processing Data <a class="header-anchor" href="#processing-data-1" aria-label="Permalink to &quot;Processing Data&quot;">​</a></h2><h3 id="structuring-the-data" tabindex="-1">Structuring the Data <a class="header-anchor" href="#structuring-the-data" aria-label="Permalink to &quot;Structuring the Data&quot;">​</a></h3><p>There are many ways of structuring the data, some methods are better than others, this becomes more apparent over time when you work with data. The most popular format follow these 3 rules:</p><ul><li>Each variable is a column; each column is a variable.</li><li>Each observation is a row; each row is an observation.</li><li>Each value is a cell; each cell is a single value.</li></ul><p>Unfortunately, most of the data that you will find is not of this form. To comply with these rules we will have to wrangle the data in some fashion. Mostly, by pivoting. Data that are complient with the rules above are often easier to work with. Furthermore, most libraries work much easier with this format. As you might have realised, the data that has been used so far is already of this form and that is because it has processed already. An added benefit of structuring data in this way is that databases such as SQL, store data in this form.</p><h3 id="cleaning-the-data" tabindex="-1">Cleaning the data <a class="header-anchor" href="#cleaning-the-data" aria-label="Permalink to &quot;Cleaning the data&quot;">​</a></h3><p>Now, that we have structured our data into a form that easy to work with, we need to think about cleaning it. In most real world data, there are always some observations that have errors. For instance, data is missing or the data dosen&#39;t make sense for one reason or the other. To finish processing the data we need to do a few more things.</p><h4 id="missing-data" tabindex="-1">Missing Data <a class="header-anchor" href="#missing-data" aria-label="Permalink to &quot;Missing Data&quot;">​</a></h4><p>As you might have noticed already, the data we work with contains missing values. So far, we have ignored them for the sake of simplicity. However, ignoring missing values without justification is bad practice. One should always have a reason for removing data. This requires some thought and analysis, maybe even a few rounds of <a href="#exploratory-data-analysis">EDA</a> to really understand the data. If you have a reasonable guess about the value of the missing data then <em>imputing</em> the value is a fine. If there is no information to be found, then discarding the entry or variable is fine. Either way, making sure that you document what and why is important.</p><h4 id="outliers" tabindex="-1">Outliers <a class="header-anchor" href="#outliers" aria-label="Permalink to &quot;Outliers&quot;">​</a></h4><p>An outliers is an entry that differs from the other entries significantly, you will often find these type of values in the data and the reason for the outlier can vary. For instance, it can be a data entry error, measurement error, sampling error, processing error and there are ofcourse natural outliers. Many statistical methods are employed for detecting outliers. We will only employ <a href="#exploratory-data-analysis">EDA</a> to detect and delete/transform/impute/accept outliers. Once again, whatever you choose be transparent and document what you have done.</p><h3 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h3><p>Real world data is often &quot;ugly&quot; and a great amount of work is needed to make it nice and understandable. Try and think about all the things that you have to account for when you are working with raw data. For instance, duplicate observations and so on. Use your best judgement.</p>',30)]))}const p=a(i,[["render",s]]);export{m as __pageData,p as default};
