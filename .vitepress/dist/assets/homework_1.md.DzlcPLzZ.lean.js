import{_ as o,c as r,a2 as t,o as s}from"./chunks/framework.DPuwY6B9.js";const g=JSON.parse('{"title":"Homework 1 — GitHub Setup & First Report","description":"","frontmatter":{},"headers":[],"relativePath":"homework/1.md","filePath":"homework/1.md"}'),i={name:"homework/1.md"};function n(a,e,l,u,d,p){return s(),r("div",null,e[0]||(e[0]=[t(`<h1 id="homework-1-—-github-setup-first-report" tabindex="-1">Homework 1 — GitHub Setup &amp; First Report <a class="header-anchor" href="#homework-1-—-github-setup-first-report" aria-label="Permalink to &quot;Homework 1 — GitHub Setup &amp; First Report&quot;">​</a></h1><blockquote><p><strong>Prerequisite</strong> Make sure you have <strong>registered on Moodle</strong> for this course. If you are not registered, we cannot grade your work.</p></blockquote><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>In HW1 you will:</p><ul><li>Use your pre-created GitHub repository <strong><code>username-homework-1</code></strong>.</li><li>Add a short, readable <strong>report</strong> (Markdown <code>README.md</code> or Jupyter notebook).</li><li>Commit any <strong>code and data instructions</strong> needed to reproduce your output.</li><li>Submit via a <strong>GitHub Issue</strong>.</li><li>Complete one <strong>peer review</strong>.</li></ul><p>This establishes the workflow used for all later homeworks.</p><h2 id="learning-goals" tabindex="-1">Learning Goals <a class="header-anchor" href="#learning-goals" aria-label="Permalink to &quot;Learning Goals&quot;">​</a></h2><ul><li>Get comfortable with the course GitHub submission workflow.</li><li>Write a clear, concise, markdown-style report.</li><li>Make results <strong>reproducible</strong> (code + instructions).</li><li>Practice constructive peer review.</li></ul><h2 id="tasks" tabindex="-1">Tasks <a class="header-anchor" href="#tasks" aria-label="Permalink to &quot;Tasks&quot;">​</a></h2><ol><li><p><strong>Prepare the repository</strong></p><ul><li><p>Accept access to your repo <strong><code>username-homework-1</code></strong>.</p></li><li><p>Clone it locally.</p></li><li><p>Create a minimal structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>username-homework-1/</span></span>
<span class="line"><span>├─ HW1/</span></span>
<span class="line"><span>│  ├─ README.md  (or HW1.ipynb)</span></span>
<span class="line"><span>│  ├─ src/       (your code, if any)</span></span>
<span class="line"><span>│  └─ data/      (optional; or instructions to obtain data)</span></span>
<span class="line"><span>├─ environment/  (optional: env files, e.g. requirements.txt or environment.yml)</span></span>
<span class="line"><span>└─ README.md     (optional repo-level notes)</span></span></code></pre></div></li></ul></li><li><p><strong>Write the report (Markdown or Notebook)</strong> Include, at minimum:</p><ul><li><strong>Title:</strong> “Homework 1”</li><li><strong>About you (2–4 sentences):</strong> academic/programme context only (no personal contact details).</li><li><strong>Prior experience with data science (3–6 sentences):</strong> tools/languages you’ve used, courses, interests.</li><li><strong>One simple figure or table</strong> (optional): e.g., a tiny demo using any dataset (can be built-in, e.g., <code>seaborn.load_dataset(&quot;tips&quot;)</code>), purely to test your toolchain.</li><li><strong>Reproducibility note:</strong> brief instructions to run your code (e.g., “<code>pip install -r requirements.txt</code> then open <code>HW1/HW1.ipynb</code>”).</li></ul></li><li><p><strong>Make it reproducible</strong></p><ul><li>Commit the <strong>code</strong> that produces your outputs (plots/tables).</li><li>If you use any data, include <strong>download instructions or a small sample</strong>; do not commit large files.</li><li>Provide minimal <strong>environment instructions</strong> (requirements file or a short note).</li></ul></li><li><p><strong>Submit</strong></p><ul><li><p>Push your work.</p></li><li><p>Open an Issue in the repo titled <strong><code>HW1 – Submission</code></strong>. <em>(Optional)</em> add the label <strong><code>ready-for-grading</code></strong>.</p></li><li><p>In the Issue body, include:</p><ul><li>A link to your report file.</li><li>A 2–3 line summary of what’s included.</li><li>Any notes for the grader (e.g., where to find code).</li></ul></li></ul></li></ol><h2 id="allowed-tools" tabindex="-1">Allowed Tools <a class="header-anchor" href="#allowed-tools" aria-label="Permalink to &quot;Allowed Tools&quot;">​</a></h2><p>Use <strong>any tools you like</strong> (Python/R/SQL/editors). The only requirements are:</p><ul><li>The report is <strong>readable on GitHub</strong> (<code>README.md</code> or <code>.ipynb</code>).</li><li>All code used to generate outputs is included so results are <strong>reproducible</strong>.</li></ul><h2 id="peer-review-after-the-deadline" tabindex="-1">Peer Review (after the deadline) <a class="header-anchor" href="#peer-review-after-the-deadline" aria-label="Permalink to &quot;Peer Review (after the deadline)&quot;">​</a></h2><p>Review your assigned partner’s repository and comment under <strong>their</strong> <code>HW1 – Submission</code> Issue.</p><p><strong>Checklist (copy into your comment):</strong></p><ul><li><strong>Coverage:</strong> Are all HW1 tasks present? (repo structure, report, submission issue)</li><li><strong>Reproducibility:</strong> Is it clear how to run the code and reproduce outputs?</li><li><strong>Clarity:</strong> Is the report concise and readable on GitHub?</li><li><strong>One highlight:</strong> Something done especially well.</li><li><strong>One suggestion:</strong> A specific, actionable improvement.</li></ul><h2 id="grading" tabindex="-1">Grading <a class="header-anchor" href="#grading" aria-label="Permalink to &quot;Grading&quot;">​</a></h2><p>Per-homework grading: <strong>U (Fail) / G (Pass) / VG (Pass with Distinction)</strong> based on:</p><ul><li><strong>Completeness:</strong> Required items present (repo, report, code, submission issue).</li><li><strong>Clarity:</strong> Report is readable, well-structured, concise.</li><li><strong>Correctness/Reproducibility:</strong> Code runs or is clearly explained; outputs are reproducible with provided notes.</li></ul><p><strong>Notes</strong></p><ul><li>Late submissions require an <strong>extra task</strong> and are graded <strong>Pass/Fail</strong> only (no VG).</li><li>Keep personal information minimal and professional.</li></ul><h2 id="submission-summary-quick-reference" tabindex="-1">Submission Summary (quick reference) <a class="header-anchor" href="#submission-summary-quick-reference" aria-label="Permalink to &quot;Submission Summary (quick reference)&quot;">​</a></h2><ul><li>Repo: <strong><code>username-homework-1</code></strong></li><li>Report: <strong><code>HW1/README.md</code></strong> <em>or</em> <strong><code>HW1/HW1.ipynb</code></strong></li><li>Issue: <strong><code>HW1 – Submission</code></strong> (link to report; optional label <code>ready-for-grading</code>)</li><li>Deadline: <strong>Tuesday 23:59 (Europe/Stockholm)</strong></li></ul>`,24)]))}const m=o(i,[["render",n]]);export{g as __pageData,m as default};
